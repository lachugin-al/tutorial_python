print('Hello')

# Память компьютера
x = 'Hello "World"'  # имя ссылается на значение (объект с типом str)
print(x)
print(type(x))  # str

x = 1 + 2 + 3 * 2  # вначале вычислит выражение а потом произойдет присваивание
# после появляетяс объект 9 с типом int
print(type(x))  # int

a = 2
b = 5
print(a, b)  # print a, b
tmp = a
a = b
b = tmp
print(a, b, sep=" ", end=' решено!\n')  # обмен переменных через одну дополнительную переменую

a, b = b, a
print(a, b, sep=" ", end=' решено!')  # обмен переменных через 2 доп переменных которые уничтожатся после использования
# обмен через временный кортеж и представляют из себя ссылки на обьекты и не копируют сами объекты

# каскадное присваивание
x = y = z = 0  # присвоим ссылку на целое число всем переменным: ТИП int НЕ ИЗМЕНЯЕМЫЙ (объект каким создан такой и остается)
# x = 2, x = 5 присваиваем ссылку на новый объект

# множественное присваивание (кортеж переменных и кортеж значений)
x, y, z = 1, 2, 3

# Орифметические опрации
# Операции производятся с права налево <---

# одинаковый приоритет
# 1 унарные операции более высокого приоритета что бинарные
z = x ** y  # возведение в степерь
z1 = 3 ** 0.5  # корень из 3
z2 = a ** b ** 2

# 2 унарный минус
z3 = -x

# 3
z4 = x * y  # умножение и деление
z5 = x / y

# 4 целочисленне деление
z6 = x // y  # с отбрасывание остатка
z7 = x % y  # нас может интересовать остаток
(x + y) % 10  # группа вычетов по модулю 10 (2+4)%5 == 1
(-12) // 10  # минус выбрасываем за скобку -12/10 = 1 = -1
(-12) % 10  # минус выбрасываем за скобку = -12+10=-2 = -2

(-12) // 5  # = -3
(-12) % 5  # = -3 * 5 = 15 - 12 = 3 Остаток всегда принадлежит диапозону от 0 > 5 не включая

(-11) // 10  # = -2
(-11) % 10  # = 9

# Управляющие операции: циклы и ветвления
# цикл while с предусловием
f = 1
while (f > 0):
    f = f + 1
    if (f == 10):
        break  # минует else
    if (f == 9):
        f = -1
else:
    print("end")

# синтаксический сахар каунтер
x=int(input())
while x>0:
    y=x
    # continue оператор позволяет пропустить кусок кода и начать со старта итерации
    while y>0:
        y-=1 # y=y-1
        print(y)
    x-=1
print("stop")
# для 3
# 2
# 1
# 0
# 1
# 0
# 0

# условный оператор if else

# оператор for
for x in 1,5,2,4,3:
    print(x**2)
    # break
# else:

# арифметическая прогрессия 1-100 чтобы пробежать по циклу есть оператор range
# range(start, stop, step)
range(1,10,1) #1-9, stop является верхней границей не включительно
range(1,10,-1) # пуста последовательность, не выполнится ни разу
range(10,1,-1) # начнет от 10 включительно и закончит 2
range(9,-1,-1) # 9-0