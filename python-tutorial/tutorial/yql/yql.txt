https://yql.yandex-team.ru/Operations/621f3880bab79380bfa3b66d
Типы данных
Для корректного формулирования запросов к таблицам необходимо понимать, что данные в них не совершенно произвольные. Область возможных значений данных и операции над этими значениями описываются типом данных.
Пример: логический тип данных, у него возможные значения true и false, операции над его значениями - И/ИЛИ/НЕ/ИСКЛЮЧАЮЩЕЕ ИЛИ и сравнения. Для компактного отображения типов данных для некоторого значения x можно воспользоваться записью FormatType(TypeOf(x)).
Те типы, для которых значения нельзя разделить на несколько значений другого типа называются элементарными.
Виды элементарных типов данных:
Bool Логический.
IntXX/UintYY/Float/Double (на месте XX - разрядность в битах 8/16/32/64) Числовой (целые знаковые и беззнаковые числа и числа с плавающей точкой)
String/Utf8/Json/Yson/Uuid Строковой (текст, произвольные бинарные данные и некоторые форматы данных)
Date/Datetime/Timestamp/Interval/TzDate/TzDatetime/TzTimestamp Дата и время
Примеры операций, возвращающих значения элементарных типов и их компактную форму.
Также есть другие типы, называемые композитными, состоящие из других композитных или элементарных типов. Пример - список или кортеж.
Виды композитных типов данных:
List/Список - последовательность из 0 и более элементов одного типа. Количество элементов не фиксировано.
Tuple/Кортеж - упорядоченный набор из 0 и более элементов произвольных типов. Количество элементов фиксировано.
Struct/Структура - именованный неупорядоченный набор из 0 или более элементов произвольных типов. Количество элементов фиксировано.
Dict/Словарь - набор пар ключ-значение. Все значения ключей уникальны. Все ключи имеют один и тот же тип, как и значения. Количество элементов не фиксировано.
Optional/Опциональный тип - последовательность из 0 или 1 элементов некоторого типа. Случай, когда в последовательности 0 элементов изображается как NULL.
Variant/Вариант - подвид кортежа или структуры, в котором заполнен ровно один элемент.
Примеры операций, возвращающих значения композитных типов и их компактную форму.

select
  FormatType(TypeOf(true)) as BooleanType,
  FormatType(TypeOf(1)) as IntegerType,
  FormatType(TypeOf(2.0)) as FloatType,
  FormatType(TypeOf("привет")) as StringType,
  FormatType(TypeOf(Date("2018-01-01"))) as DateType;

=======
$struct = AsStruct(5 as foo, true as bar);
$var_type = VariantType(TypeOf($struct));

select
  FormatType(TypeOf(AsList(1,2,3))) as ListType,
  FormatType(TypeOf(AsTuple(4,"foo"))) as TupleType,
  FormatType(TypeOf($struct)) as StructType,
  FormatType(TypeOf(AsDict(
    AsTuple(1,"foo"),
    AsTuple(2,"bar")
 ))) as DictType,
 FormatType(TypeOf(2/1)) as OptionalType1,
 FormatType(TypeOf(2/0)) as OptionalType2,
 FormatType(TypeOf(Variant(6,"foo",$var_type))) as VariantType1,
 FormatType(TypeOf(Variant(false,"bar",$var_type))) as VariantType2;